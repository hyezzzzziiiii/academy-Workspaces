package JDBC05;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;


public class PersonDao {

	static String driver = "oracle.jdbc.driver.OracleDriver";
	static String url = "jdbc:oracle:thin:@localhost:1521:xe";
	static Connection con = null;
	static PreparedStatement pstmt = null;
	static ResultSet rs = null;
	
	public ArrayList<PersonDto> select() {
		ArrayList<PersonDto> list = new ArrayList<PersonDto>();
		try {
		Class.forName(driver);
		con = DriverManager.getConnection(url, "scott", "tiger");
		String sql = "select * from person";
		pstmt = con.prepareStatement(sql);
		rs = pstmt.executeQuery();
		
		while( rs.next() ) { 
		PersonDto bdto = new PersonDto();
		bdto.setPersonnum(rs.getString("personnum"));
		bdto.setPersonname(rs.getString("personname"));
		bdto.setPhone(rs.getInt("phone"));
		bdto.setBirth(rs.getInt("birth"));
		bdto.setEnterdate(rs.getInt("enterdate"));
		bdto.setBpoint(rs.getInt("bpoint"));
		bdto.setAge(rs.getInt("age"));
		bdto.setGender(rs.getString("gender"));
		list.add(bdto);
		}
		} catch (ClassNotFoundException e) { e.printStackTrace();
		} catch (SQLException e) { e.printStackTrace(); }

		try { 
			if(con != null) con.close(); 
			if(pstmt != null) pstmt.close();
			if(rs != null) rs.close();
		}catch (SQLException e) { e.printStackTrace();}
		return list;  
	}
	
	public int insert(PersonDto pdto) {
		int result = 0;
		try {
		Class.forName(driver);
		con = DriverManager.getConnection(url, "scott", "tiger");
		String sql = "insert into booklist values(person_seq.nextVal,?,?,?,?,?)";
		pstmt = con.prepareStatement(sql);
		pstmt.setString(1, pdto.getPersonnum());
		pstmt.setString(2, pdto.getPersonname());
		pstmt.setInt(3, pdto.getPhone());
		pstmt.setInt(4, pdto.getBirth());
		pstmt.setInt(5, pdto.getEnterdate());
		pstmt.setInt(6, pdto.getBpoint());
		pstmt.setInt(7, pdto.getAge());
		pstmt.setString(8, pdto.getGender());
		
		//personnum/ personname/ phone/ birth/enterdate bpoint age gender
		result = pstmt.executeUpdate();
		} catch (ClassNotFoundException e) {e.printStackTrace();
		} catch (SQLException e) {e.printStackTrace();
		} 
		try { 
		if(con != null) con.close(); 
		if(pstmt != null) pstmt.close();
		if(rs != null) rs.close();
		}catch (SQLException e) { e.printStackTrace(); }
		
		return result;
		}
	
	//personnum/ personname/ phone/ birth/enterdate bpoint age gender
	public int update(PersonDto pdto) {
		int result = 0;
		try {
		Class.forName(driver);
		con = DriverManager.getConnection(url, "scott", "tiger");
		String sql = "update person set ";
		boolean first = true; 
		if( !pdto.getPersonnum().equals("") ) {
			sql = sql + " personnum=? ";
			first=false; 
		}
		if( !pdto.getPersonname().equals("") ) {
			sql = sql + " personname=? ";
			first=false; 
		}
		if( pdto.getPhone() != 0 ) {
			if(first) { sql = sql + " phone=? "; first=false; }
			else sql = sql + ", phone=? ";
		}
		if( pdto.getBirth() != 0 ) {
			if(first) { 
			sql = sql + " birth=? "; first=false; 
			}else sql = sql + ", birth=? ";
		}
		if( pdto.getEnterdate() != 0 ) {
			if(first) { sql = sql + " enterdate=? "; first=false; }
			else sql = sql + ", enterdate=? ";
		}
		if( pdto.getBpoint() != 0 ) {
			if(first) { 
			sql = sql + " bpoint=? "; first=false; 
			}else sql = sql + ", bpoint=? ";
		}
		if( pdto.getAge() != 0 ) {
			if(first) { 
			sql = sql + " age=? "; first=false; 
			}else sql = sql + ", age=? ";
		}
		if( !pdto.getGender().equals("") ) {
			if(first) { sql = sql + " grender=? "; first=false;}
			else sql = sql + ", gender=? ";
		}
		sql = sql + " where personnum=? "; â€‹
		System.out.println(sql);
		pstmt = con.prepareStatement(sql);
		int cnt=1; first = true;
		if( !bdto.getSubject().equals("") ) {
		pstmt.setString(1, bdto.getSubject()); first = false;
		}
		if( bdto.getMakeyear() != 0 ) {
		if(first) { pstmt.setInt(1, bdto.getMakeyear()); first=false; 
		} else pstmt.setInt(++cnt, bdto.getMakeyear());

		}
		if( bdto.getInprice() != 0 ) {
		if(first) { pstmt.setInt(1, bdto.getInprice()); first=false; 
		} else pstmt.setInt(++cnt, bdto.getInprice());
		}

		if( bdto.getOutprice() != 0 ) {
		if(first) { pstmt.setInt(1, bdto.getOutprice()); first=false; 
		}else pstmt.setInt(++cnt, bdto.getOutprice());
		}
		if( !bdto.getGrade().equals("") ) {
		if(first) { pstmt.setString(1, bdto.getGrade()); first=false; 
		}else pstmt.setString(++cnt, bdto.getGrade());
		}
		pstmt.setString(++cnt, bdto.getBooknum());
		result = pstmt.executeUpdate();
		} catch (ClassNotFoundException e) {e.printStackTrace();
		} catch (SQLException e) {e.printStackTrace();
		} finally {
		try { 
		if(con != null) con.close(); 
		if(pstmt != null) pstmt.close();
		if(rs != null) rs.close();
		}catch (SQLException e) { e.printStackTrace(); }
		}
		return result;}

}