package days10;
//Method : Function이라고도 부르며, 간헐적으로 반복되는 코드단위를 별도로 정의하고
//그 이름 불러서 코드를 실행하는 단위코드.
// java에서는 Function이란 말보다 Method라는 표현을 주로 사용합니다.		
// 특징
// 1. 명령들이 모여서 기능을 정의하는 단위
// 2. 일련의 실행코드들을 묶어서 재활용
// 3.메소드의 생성: 반드시 클래스의 내부에서만 선언할 수 있습니다.
// 4.메소드는 선언된 이후, 메소드를 이름으로 호출해야만 메소드의 실행코드들이 실행됩니다.
// 5. 각 메소드는 고유한 기능이 있고, 고유한 이름이 있으며, 항상 고유한 이름옆에 괄호를 달고 나옵니다. 
public class Method01 {

	// 함수의 실행을 명령한다는 것을 이제부터 그 함수 (메서드)를 호출한다 라고 표현합니다.
	// main 메서드는 프로그램 시작과 동시에 자동 호출 되는 메서드입니다.
	public static void main(String[] args) {
		System.out.println("프로그램시작");  //1번
		myPrint();  // 이름으로 호출(call)돼야 실행 2번
		System.out.println("프로그램시작");  //3번
		// 메소드가 호출되면, 해당 메소드 내부에 있는 코드들이 실행됩니다.
		// 메소드가 호출되면, 실행의 흐름이 현재 메소드에서 호출한 메소드로 이동됩니다.
		// 해당 메소드의 실행이 종료된 이후 메소드를 호출한 시점으로 돌아오게 됩니다.
	}
	
	// 아래와 같은 사용자가 생성한 메서드는 이외의 다른 영역에서 코드로 직접 호출해야 실행됩니다.
     public static void myPrint() {  //2번
    	 System.out.println("내가 만든 Print 메서드 실행 ~~!!");
    	 System.out.println("내가 만든 Print 메서드 실행 ~~!!");
    	 System.out.println("내가 만든 Print 메서드 실행 ~~!!");
	}
     // 메소드 사용의 첫번쨰 이유
     // 간헐적으로 반복되는 명령집합을 메서드로 정의, 필요할떄마다 이름불러서 사용
}
